define ([
  'mydash'
  'extractors'
  'utilities'
  'slider'
  'assertions'
], (_, x, u, slider-fns, v) ->

  modifyCastlingRights = \chart2 \tgt ->
    # Start testing mode.
    v.vow-chart2 chart2
    v.vow-position tgt
    # End testing mode.

    board         = x.board-from chart2
    src           = x.position-from chart2
    rook-color    = x.color-at board src
    castling-rts  = x.castling-rights-from chart2
    black?        = u.black? rook-color
    kingside?     = u.kingside? (src, tgt)
    revoked-right = u.castling-matcher (black?, kingside?)

    u.revoke-castling-right revoked-right castling-rts

  pf = public-fns = _.defaults [slider-fns] {
    getPotentialKingAttacks
    modifyCastlingRights
  }

  pf.getPotentialKingAttacks = \chart2 \tgt ->
    # Start testing mode.
    v.vow-board board
    v.vow-position src
    # End testing mode.

    pf.get-basic-potential-moves (
      x.rank-of src
      x.file-of src
      u.offsets-for c.rook
      u.available? (board, src)
    )

  pf.move = pf.basicMove

  return public-fns

)
