// Generated by CoughSyrup 0.1.0
(function() {
  define(['extractors', 'utilities', 'constructors', 'assertions'], function(x, u, g, v) {
    var getBasicPotentialMoves;
    getBasicPotentialMoves = function(setting, chessman_hyphen_type) {};
    getBasicPotentialMoves = function(board, src, chessman_hyphen_type) {
      var available_question_, dir, file, file_hyphen_diff, new_hyphen_file, new_hyphen_rank, offsets, possible_hyphen_moves, rank, rank_hyphen_diff, tgt, _i, _len, _ref, _ref1, _ref2;
      v.vow_hyphen_board(board);
      v.vow_hyphen_position(src);
      v.vow_hyphen_chessman_hyphen_type(chessman_hyphen_type);
      _ref = x.rank_hyphen__ampersand__hyphen_file_hyphen_from(src), rank = _ref[0], file = _ref[1];
      offsets = u.offsets_hyphen_for(chessman_hyphen_type);
      available_question_ = u.available_question_(board, src);
      possible_hyphen_moves = [];
      for (_i = 0, _len = offsets.length; _i < _len; _i++) {
        dir = offsets[_i];
        _ref1 = x.rank_hyphen__ampersand__hyphen_file_hyphen_from(dir), rank_hyphen_diff = _ref1[0], file_hyphen_diff = _ref1[1];
        _ref2 = [rank + rank_hyphen_diff, file + file_hyphen_diff], new_hyphen_rank = _ref2[0], new_hyphen_file = _ref2[1];
        tgt = g.generate_hyphen_position(new_hyphen_rank, new_hyphen_file);
        if (available_question_(tgt)) {
          possible_hyphen_moves.push(tgt);
        }
      }
      return possible_hyphen_moves;
    };
    return {
      getBasicPotentialMoves: getBasicPotentialMoves
    };
  });

}).call(this);
