// Generated by CoughSyrup 0.1.0
(function() {
  define(['mydash', 'extractors', 'utilities', 'slider', 'assertions'], function(_, x, u, slider_hyphen_fns, v) {
    var modifyCastlingRights, pf, public_hyphen_fns;
    modifyCastlingRights = function(chart2) {
      return function(tgt) {
        var black_question_, board, castling_hyphen_rts, kingside_question_, revoked_hyphen_right, rook_hyphen_color, src;
        v.vow_hyphen_chart2(chart2);
        v.vow_hyphen_position(tgt);
        board = x.board_hyphen_from(chart2);
        src = x.position_hyphen_from(chart2);
        rook_hyphen_color = x.color_hyphen_at(board)(src);
        castling_hyphen_rts = x.castling_hyphen_rights_hyphen_from(chart2);
        black_question_ = u.black_question_(rook_hyphen_color);
        kingside_question_ = u.kingside_question_(src, tgt);
        revoked_hyphen_right = u.castling_hyphen_matcher(black_question_, kingside_question_);
        return u.revoke_hyphen_castling_hyphen_right(revoked_hyphen_right)(castling_hyphen_rts);
      };
    };
    pf = public_hyphen_fns = _.defaults([slider_hyphen_fns])({
      getPotentialKingAttacks: getPotentialKingAttacks,
      modifyCastlingRights: modifyCastlingRights
    });
    pf.getPotentialKingAttacks = function(chart2) {
      return function(tgt) {
        v.vow_hyphen_board(board);
        v.vow_hyphen_position(src);
        return pf.get_hyphen_basic_hyphen_potential_hyphen_moves(x.rank_hyphen_of(src), x.file_hyphen_of(src), u.offsets_hyphen_for(c.rook), u.available_question_(board, src));
      };
    };
    pf.move = pf.basicMove;
    return public_hyphen_fns;
  });

}).call(this);
